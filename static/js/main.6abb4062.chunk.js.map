{"version":3,"sources":["api/instance.js","components/Categories.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","Categories","useState","categories","setCategories","category","setCategory","useEffect","instance","get","then","response","data","className","map","categoryName","onClick","value","createdAt","created_at","updatedAt","updated_at","iconUrl","icon_url","id","url","console","log","handleCategoryClick","src","alt","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,qCCiEEC,EAjEI,WAAO,IAAD,EAEeC,mBAAS,IAFxB,mBAEdC,EAFc,KAEFC,EAFE,OAGWF,qBAHX,mBAGdG,EAHc,KAGJC,EAHI,KAKrBC,qBAAU,WACFC,EAASC,IAAI,cAAcC,MAAK,SAACC,GAC7BP,EAAc,CACVQ,KAAMD,EAASC,YAG5B,IAkBH,OACI,sBAAKC,UAAY,eAAjB,UACI,sBAAKA,UAAY,aAAjB,UACI,4CAEIV,EAAWS,MAAQT,EAAWS,KAAKE,KAAK,SAAAC,GACpC,OAAO,oBAEPC,QAAW,kBAxBJ,SAACD,GAC5BP,EAASC,IAAT,iBAAuBM,IAAgBL,MAAK,SAACC,GACzCL,EAAY,CACRS,aAAaA,EACbE,MAAON,EAASC,KAAKK,MACrBC,UAAWP,EAASC,KAAKO,WACzBC,UAAWT,EAASC,KAAKS,WACzBC,QAAQX,EAASC,KAAKW,SACtBC,GAAIb,EAASC,KAAKY,GAClBC,IAAKd,EAASC,KAAKa,SAI3BC,QAAQC,IAAItB,GAWyBuB,CAAoBb,IAF9B,SAILA,GAHMA,UAQV,OAARV,QAAQ,IAARA,OAAA,EAAAA,EAAUY,OACZ,sBAAKJ,UAAY,WAAjB,UACI,mDAAeR,QAAf,IAAeA,OAAf,EAAeA,EAAUU,gBACzB,qBAAKc,IAAG,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAUiB,QAASQ,IAAI,SACjC,mCACKzB,QADL,IACKA,OADL,EACKA,EAAUY,QACX,uBACJ,mBAAGc,KAAI,OAAI1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAUoB,IAAKO,OAAO,SAAjC,iBANJ,IAMsD,uBAClD,+CAAY3B,QAAZ,IAAYA,OAAZ,EAAYA,EAAUmB,MAAW,uBACjC,uDACkBnB,QADlB,IACkBA,OADlB,EACkBA,EAAUa,aACrB,uBACP,uDACkBb,QADlB,IACkBA,OADlB,EACkBA,EAAUe,gBAEvB,SCnDNa,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6abb4062.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.chucknorris.io/jokes\"\r\n})","import React, { useState, useEffect } from 'react';\r\nimport instance from \"../api/instance\";\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [category, setCategory] = useState()\r\n\r\n    useEffect(() => {\r\n            instance.get(\"categories\").then((response) => {\r\n                setCategories({\r\n                    data: response.data,\r\n                });\r\n            })\r\n    }, [])\r\n    \r\n   const handleCategoryClick = (categoryName) => {\r\n    instance.get(`random?${categoryName}`).then((response) => {\r\n        setCategory({\r\n            categoryName:categoryName,\r\n            value: response.data.value,\r\n            createdAt: response.data.created_at,\r\n            updatedAt: response.data.updated_at,\r\n            iconUrl:response.data.icon_url,\r\n            id: response.data.id,\r\n            url: response.data.url\r\n        });\r\n    })\r\n    \r\n    console.log(category)\r\n   }\r\n\r\n    return ( \r\n        <div className = \"chuck-norris\">\r\n            <div className = \"categories\">\r\n                <h4>Categories</h4>\r\n                {\r\n                    categories.data && categories.data.map( categoryName => {\r\n                        return <h5\r\n                        key = { categoryName }\r\n                        onClick = {() => handleCategoryClick(categoryName)}\r\n                        >\r\n                        { categoryName }\r\n                        </h5>\r\n                    })\r\n                }\r\n            </div>\r\n            { category?.value ? \r\n            <div className = \"category\">\r\n                <h4>Category: {category?.categoryName}</h4>\r\n                <img src={category?.iconUrl} alt=\"icon\"/>\r\n                <p>\r\n                    {category?.value}\r\n                </p><br/>\r\n                <a href = {category?.url} target=\"_blank\">url</a> <br/>\r\n                <span>id: { category?.id }</span><br/>\r\n                <span>\r\n                    Created at: { category?.createdAt }\r\n                </span><br/>\r\n                <span>\r\n                    Updated at: { category?.updatedAt } \r\n                </span>\r\n            </div> : null\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Categories;","import './App.css';\nimport Categories from './components/Categories';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Categories/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}